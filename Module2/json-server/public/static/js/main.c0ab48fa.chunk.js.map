{"version":3,"sources":["redux/dishes.js","redux/ActionTypes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","components/HeaderComponent.js","components/FooterComponent.js","components/LoadingComponent.js","shared/baseUrl.js","components/MenuComponent.js","components/DishdetailComponent.js","components/ContactComponent.js","components/HomeComponent.js","components/AboutComponent.js","redux/ActionCreators.js","components/MainComponent.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Dishes","state","isLoading","errmsg","dishes","action","type","payload","Comments","errMess","comments","comment","concat","Promotions","promotions","Leaders","leaders","InitialFeedback","firstname","lastname","telnum","email","agree","contactType","message","Header","props","toggleNav","bind","isNavOpen","isModalOpen","toggleModal","handleLogin","this","setState","event","alert","username","value","password","remember","checked","preventDefault","dark","expand","className","onClick","href","src","height","width","alt","isOpen","navbar","to","outline","toggle","onSubmit","htmlFor","id","name","innerRef","input","check","color","Component","Footer","Loading","baseUrl","RenderMenuItem","dish","image","Menu","menu","map","key","active","required","val","length","maxLength","len","RenderDish","in","transformProps","exitTransform","top","description","RenderComments","postComment","dishId","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","DishDetail","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","values","resetFeedbackForm","postFeedback","then","res","JSON","stringify","role","model","md","text","placeholder","validators","show","messages","size","offset","checkbox","select","textarea","rows","RenderCard","item","designation","Home","dishesLoading","dishesErrMsg","promosLoading","promosErrMsg","leader","About","RenderLeader","console","log","title","list","dishesFailed","addDishes","commentsFailed","addComments","promosFailed","addPromos","promos","leadersLoading","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","selectedDish","location","classNames","timeout","path","component","filter","featured","dishesErrmsg","promo","promosErrmsg","exact","match","parseInt","params","commentsErrMsg","withRouter","connect","dispatch","rating","newComment","toISOString","fetch","method","body","headers","credentials","response","ok","error","Error","status","statusText","json","addComment","catch","actions","reset","tel","newFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c0ab48fa.chunk.js","sourcesContent":["import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = {\r\n    isLoading : true,\r\n    errmsg : null,\r\n    dishes: []\r\n}, action) => {\r\n    switch(action.type){\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading:false, errmsg: null, dishes: action.payload};\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading:true, errmsg: null, dishes: []};\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading:false, errmsg: action.payload, dishes: []};\r\n        default:\r\n            return state;\r\n    }\r\n}","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const ADD_FEEDBACK = 'ADD_FEEDBACK';\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = { errMess: null, comments:[]}, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_COMMENTS:\r\n      return {...state, errMess: null, comments: action.payload};\r\n\r\n    case ActionTypes.COMMENTS_FAILED:\r\n      return {...state, errMess: action.payload};\r\n\r\n    case ActionTypes.ADD_COMMENT:\r\n        var comment = action.payload;\r\n        return { ...state, comments: state.comments.concat(comment)};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state  = { isLoading: true,\r\n                                        errMess: null,\r\n                                        promotions:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n        return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state = {\r\n    isLoading : true,\r\n    errmsg : null,\r\n    leaders: []\r\n}, action) => {\r\n    switch(action.type){\r\n        case ActionTypes.ADD_LEADERS:\r\n            return {...state, isLoading:false, errmsg: null, leaders: action.payload};\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return {...state, isLoading:true, errmsg: null, leaders: []};\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return {...state, isLoading:false, errmsg: action.payload, leaders: []};\r\n        default:\r\n            return state;\r\n    }\r\n}","export const InitialFeedback = {\r\n    firstname:'',\r\n    lastname:'',\r\n    telnum:'',\r\n    email:'',\r\n    agree:false,\r\n    contactType:'Tel.',\r\n    message:''\r\n}","import React, { Component } from 'react'\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron,\r\n    Button, Modal, ModalHeader, ModalBody,\r\n    Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.toggleNav = this.toggleNav.bind(this);\r\n    this.state = {\r\n      isNavOpen : false,\r\n      isModalOpen :false\r\n    }\r\n\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n\r\n  }\r\n\r\n  toggleNav(){\r\n    this.setState({\r\n      isNavOpen:!this.state.isNavOpen\r\n    })\r\n  }\r\n\r\n  toggleModal(){\r\n      this.setState({\r\n          isModalOpen:!this.state.isModalOpen\r\n      })\r\n  }\r\n\r\n  handleLogin(event) {\r\n    this.toggleModal();\r\n    alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n        + \" Remember: \" + this.remember.checked);\r\n    event.preventDefault();\r\n\r\n}\r\n\r\n  render() {\r\n    return(\r\n        <div>\r\n            <Navbar dark expand=\"md\">\r\n                <div className=\"container\">\r\n                    <NavbarToggler onClick={this.toggleNav} />\r\n                    <NavbarBrand className=\"mr-auto\" href=\"/\"><img src='assets/images/logo.png' height=\"30\" width=\"41\" alt='Ristorante Con Fusion' /></NavbarBrand>\r\n                    <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                        <Nav navbar>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\"  to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to='/aboutus'><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\"  to='/menu'><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to='/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\r\n                            </NavItem>\r\n                        </Nav>\r\n                        <Nav className=\"ml-auto\" navbar>\r\n                            <NavItem>\r\n                                <Button outline onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span> Login</Button>\r\n                            </NavItem>\r\n                        </Nav>\r\n                    </Collapse>\r\n                </div>\r\n            </Navbar>\r\n            <Jumbotron>\r\n                <div className=\"container\">\r\n                    <div className=\"row row-header\">\r\n                        <div className=\"col-12 col-sm-6\">\r\n                            <h1>Ristorante con Fusion</h1>\r\n                            <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Jumbotron>\r\n\r\n            <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                <ModalBody>\r\n                <Form onSubmit={this.handleLogin}>\r\n                    <FormGroup>\r\n                        <Label htmlFor=\"username\">Username</Label>\r\n                        <Input type=\"text\" id=\"username\" name=\"username\"\r\n                            innerRef={(input) => this.username = input} />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label htmlFor=\"password\">Password</Label>\r\n                        <Input type=\"password\" id=\"password\" name=\"password\"\r\n                            innerRef={(input) => this.password = input}  />\r\n                    </FormGroup>\r\n                    <FormGroup check>\r\n                        <Label check>\r\n                            <Input type=\"checkbox\" name=\"remember\"\r\n                            innerRef={(input) => this.remember = input}  />\r\n                            Remember me\r\n                        </Label>\r\n                    </FormGroup>\r\n                    <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                </Form>\r\n                </ModalBody>\r\n            </Modal>\r\n\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    return(\r\n    <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to='/home'>Home</Link></li>\r\n                        <li><Link to='/aboutus'>About Us</Link></li>\r\n                        <li><Link to='/menu'>Menu</Link></li>\r\n                        <li><Link to='/contactus'>Contact Us</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react'\r\n\r\nexport const Loading = () => {\r\n    return (\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-fw fa-3x text-primary\"></span>\r\n            <p>Loading...</p>\r\n        </div>\r\n    )\r\n}","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay,\r\n    CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl'\r\n\r\n    function RenderMenuItem ({dish, onClick}) {\r\n        return (\r\n            <Card>\r\n                <Link to ={`/menu/${dish.id}`}>\r\n                    <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                    <CardImgOverlay>\r\n                        <CardTitle>{dish.name}</CardTitle>\r\n                    </CardImgOverlay>\r\n                </Link>\r\n            </Card>\r\n        );\r\n    }\r\n\r\n    const Menu = (props) => {\r\n\r\n        const menu = props.dishes.dishes.map((dish) => {\r\n            return (\r\n                <div className=\"col-12 col-md-5 m-1\"  key={dish.id}>\r\n                    <RenderMenuItem dish={dish} onClick={props.onClick} />\r\n                </div>\r\n            );\r\n        });\r\n\r\n        if(props.dishes.isLoading){\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Loading/>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }else if(props.dishes.errmsg){\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                       <h4>{props.dishes.errmsg}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }else{\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>Menu</h3>\r\n                            <hr />\r\n                        </div>                \r\n                    </div>\r\n                    <div className=\"row\">\r\n                        {menu}\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\nexport default Menu;","import React, {Component} from 'react'\r\nimport { Card, CardImg, CardText, CardBody, Button, Modal, ModalHeader, ModalBody,\r\n    CardTitle, Breadcrumb, BreadcrumbItem, Row, Col, Label } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\n\r\nclass RenderDish extends Component {\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n    \r\n  \r\n    render(){\r\n        const {dish} = this.props;\r\n\r\n        if (dish != null){\r\n            return(\r\n                <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                    <Card>\r\n                        <CardImg top src={baseUrl+ dish.image} alt={dish.name} />\r\n                        <CardBody>\r\n                            <CardTitle>{dish.name}</CardTitle>\r\n                            <CardText>{dish.description}</CardText>\r\n                        </CardBody>\r\n                    </Card>\r\n                </FadeTransform>\r\n            );\r\n        }else{\r\n            return( <div></div> );\r\n        }\r\n    }\r\n}\r\n\r\nclass CommentForm extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            isModalOpen:false,\r\n        }\r\n\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n\r\n    }\r\n\r\n    handleSubmit(values){\r\n       this.toggleModal();\r\n       this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n    }\r\n\r\n    toggleModal(){\r\n        this.setState({\r\n            isModalOpen:!this.state.isModalOpen\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"d-flex\">\r\n                <Button outline onClick={this.toggleModal}>\r\n                    <span className=\"fa fa-pencil fa-lg mr-2\"/>\r\n                    Submit Comment\r\n                </Button>\r\n    \r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.state.toggleModal}>\r\n                    <ModalHeader toggle={this.state.toggleModal}><strong>Submit Comment</strong></ModalHeader>\r\n                    <ModalBody>\r\n                    <LocalForm LocalForm onSubmit={(values)=>this.handleSubmit(values)}>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"rating\" md={12}>Rating</Label>\r\n                            <Col md={12}>\r\n                                <Control.select model=\".rating\" name=\"rating\" className=\"form-control\">\r\n                                    <option>1</option>\r\n                                    <option>2</option>\r\n                                    <option>3</option>\r\n                                    <option>4</option>\r\n                                    <option>5</option>\r\n                                    <option>6</option>\r\n                                </Control.select>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"name\" md={12}>Your Name</Label>\r\n                            <Col md={12}>\r\n                                <Control.text model=\".author\" id=\"name\" name=\"author\"\r\n                                    placeholder=\"name\" className=\"form-control\"\r\n                                    validators={{\r\n                                        required, minLength:minLength(3), maxLength:maxLength(15)\r\n                                    }}/>\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".name\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be at least 3 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"message\" md={12}>Comment</Label>\r\n                            <Col md={12}>\r\n                                <Control.textarea model=\".comment\" id=\"message\" name=\"comment\" rows=\"6\" className=\"form-control\" />\r\n                            </Col>\r\n                        </Row>\r\n                        <Button type=\"submit\" value=\"submit\" color=\"primary\">Submit</Button>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction RenderComments({comments, postComment, dishId}) {\r\n    if(comments!=null){\r\n        return(\r\n            <Stagger in>\r\n            {comments.map((comment) => {\r\n                return (\r\n                    <Fade in>\r\n                    <li key={comment.id}>\r\n                    <p>{comment.comment}</p>\r\n                    <p>-- {comment.author} , {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}</p>\r\n                    </li>\r\n                    </Fade>\r\n                );\r\n            })}\r\n            </Stagger>\r\n        );  \r\n         \r\n    }else{\r\n        return <div></div>\r\n    }\r\n    \r\n}\r\n\r\nconst DishDetail = (props) => {\r\n    if(props.isLoading){\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }else if(props.errmsg){\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                   <h4>{props.errmsg}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if(props.dish !== null){\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr />\r\n                    </div>                \r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <RenderDish dish={props.dish} />\r\n                    </div>\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <RenderComments comments={props.comments} \r\n                        postComment={props.postComment}\r\n                        dishId={props.dish.id}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default DishDetail \r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Row, Col, Label } from 'reactstrap';\r\nimport { Control, Form, Errors, actions } from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\n\r\nclass Contact extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n\r\n    handleSubmit(values){\r\n        this.props.resetFeedbackForm();\r\n        this.props.postFeedback(values).then(\r\n            res => {\r\n                alert('Thank you for your feedback: ' + JSON.stringify(res.payload))\r\n            }\r\n        );\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>                \r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit={(values)=>this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                   <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                    placeholder=\"first name\" className=\"form-control\"\r\n                                    validators={{\r\n                                        required, minLength:minLength(3), maxLength:maxLength(15)\r\n                                    }}/>\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\" className=\"form-control\" \r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}/>\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\" className=\"form-control\" \r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber}}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\" className=\"form-control\" \r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\" /> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\" className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\" rows=\"12\" className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody,\r\n    CardTitle, CardSubtitle} from 'reactstrap';\r\nimport {Loading} from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nfunction RenderCard({item, isLoading, errmsg}) {\r\n    if(isLoading){\r\n        return (\r\n            <Loading/>\r\n        )\r\n    }else if(errmsg){\r\n        return (\r\n            <h4>{errmsg}</h4>\r\n        )\r\n    }\r\n    else{\r\n        return(\r\n            <FadeTransform\r\n                in transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                <Card>\r\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                    <CardBody>\r\n                    <CardTitle>{item.name}</CardTitle>\r\n                    {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> \r\n                                      : null }\r\n                    <CardText>{item.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nfunction Home(props) {\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish} \r\n                    isLoading={props.dishesLoading} \r\n                    errmsg={props.dishesErrMsg} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotions} \r\n                    isLoading={props.promosLoading} \r\n                    errmsg={props.promosErrMsg} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader} \r\n                    isLoading={props.promosLoading} \r\n                    errmsg={props.promosErrMsg} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\n\r\nfunction About(props) {\r\n\r\n    function RenderLeader ({leader}){\r\n        if(leader){\r\n            console.log(leader)\r\n            const {name, image, designation, description} = leader;\r\n            return(\r\n                <Fade in>\r\n                    <div className=\"my-3 text-left d-flex row\">\r\n                            <div className=\"\">\r\n                                <img className=\"d-flex mr-3 align-self-top pt-2\" src={baseUrl+image} alt=\"leader_photo\" />\r\n                            </div>\r\n                            <div className=\"media-body ml-3\">\r\n                                <h4 className=\"mb-3\">{name}</h4>\r\n                                <p className=\"mb-3\">{designation}</p>\r\n                                <p>{description}</p>\r\n                            </div>\r\n                    </div>\r\n                </Fade>\r\n            )             \r\n        }else{\r\n            return <div></div>\r\n        }\r\n\r\n    }\r\n\r\n    const leaders = props.leaders.leaders.map((leader) => {\r\n        return (\r\n          \r\n            <Stagger in>\r\n                <RenderLeader leader={leader}/>\r\n            </Stagger>\r\n\r\n        );\r\n    });\r\n\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Media list>\r\n                        {leaders}\r\n                    </Media>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;    ","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    };\r\n    newComment.date = new Date().toISOString();\r\n    \r\n    return fetch(baseUrl + 'comments', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\r\n};\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(dishes => dispatch(addDishes(dishes)))\r\n    .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmsg) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmsg\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\n//\r\n\r\nexport const fetchComments = () => (dispatch) => {    \r\n    return fetch(baseUrl + 'comments')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(comments => dispatch(addComments(comments)))\r\n    .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const commentsFailed = (errmsg) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmsg\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\n//\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    \r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addPromos(promos)))\r\n    .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING,\r\n});\r\n\r\nexport const promosFailed = (errmsg) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmsg\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\n//\r\n\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    \r\n    dispatch(leadersLoading());\r\n\r\n    return fetch(baseUrl + 'leaders')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(leaders => dispatch(addLeaders(leaders)))\r\n    .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING,\r\n});\r\n\r\nexport const leadersFailed = (errmsg) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmsg\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n});\r\n\r\n//\r\n\r\nexport const addFeedback = (feedback) => ({\r\n    type: ActionTypes.ADD_FEEDBACK,\r\n    payload: feedback\r\n});\r\n\r\nexport const postFeedback = (firstname, lastname, tel, email, agree, contactType, message) => (dispatch) => {\r\n\r\n    const newFeedback = {\r\n        firstname:firstname,\r\n        lastname:lastname, \r\n        tel:tel, \r\n        email:email, \r\n        agree:agree, \r\n        contactType:contactType, \r\n        message:message\r\n    };\r\n    newFeedback.date = new Date().toISOString();\r\n    \r\n    return fetch(baseUrl + 'feedback', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newFeedback.firstname),  //I still don't get it why it is nested under firstname...\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addFeedback(response)))\r\n    .catch(error =>  { console.log('post Feedback', error.message); alert('Your Feedback could not be posted\\nError: '+error.message); });\r\n};\r\n\r\n","import React, { Component } from 'react';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport Menu from './MenuComponent';\r\nimport DishDetail from './DishdetailComponent';\r\nimport Contact from './ContactComponent';\r\nimport Home from './HomeComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport About from './AboutComponent';\r\nimport { connect } from 'react-redux';\r\nimport { postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders, postFeedback } from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nconst mapStateToProps = state => {\r\n  return {  \r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n  fetchDishes: () => { dispatch(fetchDishes())},\r\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\r\n  fetchComments: () => dispatch(fetchComments()),\r\n  fetchPromos: () => dispatch(fetchPromos()),\r\n  fetchLeaders: () => dispatch(fetchLeaders()),\r\n  postFeedback: (firstname, lastname, telnum, agree, contactType, email, message) => dispatch(postFeedback(firstname, lastname, telnum, agree, contactType, email, message)),\r\n});\r\n\r\nclass Main extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  \r\n  componentDidMount(){\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n    this.props.fetchLeaders();\r\n  }\r\n\r\n  onDishSelect(dishId) {\r\n    this.setState({ selectedDish: dishId});\r\n  }\r\n\r\n  render() {\r\n\r\n    const HomePage = () => {\r\n      return(\r\n          <Home \r\n              dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n              dishesLoading={this.props.dishes.isLoading}\r\n              dishesErrmsg={this.props.dishes.errmsg}\r\n              promotions={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n              promosLoading={this.props.promotions.isLoading}\r\n              promosErrmsg={this.props.promotions.errmsg}\r\n              leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n              promosLoading={this.props.leaders.isLoading}\r\n              promosErrmsg={this.props.leaders.errmsg}\r\n          />\r\n      );\r\n    }\r\n\r\n\r\n    const DishWithId = ({match}) => {\r\n      return(\r\n        <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\r\n          isLoading={this.props.dishes.isLoading}\r\n          errMess={this.props.dishes.errMess}\r\n          comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\r\n          commentsErrMsg={this.props.comments.errmsg}\r\n          postComment={this.props.postComment}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n          <Header/>\r\n          <div>\r\n\r\n              <TransitionGroup>\r\n              <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n                <Switch location={this.props.location}>\r\n                    <Route path='/home' component={HomePage} />\r\n                    <Route exact path='/aboutus' component={() => <About leaders={this.props.leaders} />} />} />\r\n                    <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\r\n                    <Route path='/menu/:dishId' component={DishWithId} />\r\n                    <Route exact path='/contactus' component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm}  postFeedback={this.props.postFeedback}/>} />\r\n                    <Redirect to=\"/home\" />\r\n                </Switch>\r\n              </CSSTransition>\r\n            </TransitionGroup>\r\n\r\n          </div>\r\n          <Footer/>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(Main));\r\n","import React, {Component} from 'react';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\nimport Main from './components/MainComponent'\n\nconst store = ConfigureStore();\nclass App extends Component {\n\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div className=\"App\">\n            <Main />\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { createForms } from 'react-redux-form'\r\nimport { Dishes } from './dishes'\r\nimport { Comments } from './comments'\r\nimport { Promotions } from './promotions'\r\nimport { Leaders } from './leaders'\r\nimport thunk from 'redux-thunk'\r\nimport logger from 'redux-logger'\r\nimport { InitialFeedback } from './forms'\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n       combineReducers({\r\n           dishes:Dishes,\r\n           comments:Comments,\r\n           promotions:Promotions,\r\n           leaders:Leaders,\r\n           ...createForms({\r\n               feedback:InitialFeedback\r\n           })\r\n       }),\r\n       applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}